@model Lab2_NgVanSi.Models.Rubik
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <label class="control-label col-md-2" for="Ten" style="text-align:left">Tên</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ten, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ten, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Loai" style="text-align:left">Loại</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Loai, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Loai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="MoTa" style="text-align:left">Mô tả</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Gia" style="text-align:left">Giá</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Hang" style="text-align:left">Hãng</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hang, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hang, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Hinh" style="text-align:left">Ảnh nguồn</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="SoLgTon" style="text-align:left">Số lượng tồn</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.SoLgTon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoLgTon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Trở về trang chủ", "Index")
</div>
